@page "/advert-search"
@inject IAdvertService AdvertService
@using Newtonsoft.Json


<MudDrawerContainer>

    <!-- SÖKFILTRET -->
    <MudDrawer @bind-Open="_searchPanelOpen"
               Anchor="Anchor.Left"
               Elevation="1"
               Variant="DrawerVariant.Responsive"
               Breakpoint="Breakpoint.Md"
               Class="p-4"
               Width="300px">
        <MudText Typo="Typo.h5" Class="mb-4">Sök bostäder</MudText>

        <MudGrid>
            <MudItem xs="12" sm="12" Class="mb-4">
                <MudTextField @bind-Value="_filter.Address"
                              Label="Sök adress"
                              Variant="Variant.Outlined"
                              Clearable="true" />
            </MudItem>

            <MudItem xs="12" sm="12" Class="mb-4">
                <MudSelect T="ResidenceType"
                           Label="Bostadstyp"
                           MultiSelection="true"
                           SelectedValues="_filter.ResidenceTypes ?? new List<ResidenceType>()"
                           SelectedValuesChanged="OnResidenceTypesChanged">
                    @foreach (var item in Enum.GetValues<ResidenceType>())
                    {
                        <MudSelectItem Value="@item">@item.ToString()</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>

            <MudItem xs="6" Class="mb-4">
                <MudNumericField @bind-Value="_filter.MinRooms"
                                 Label="Min antal rum"
                                 Variant="Variant.Outlined"
                                 Min="1" />
            </MudItem>
            <MudItem xs="6" Class="mb-4">
                <MudNumericField @bind-Value="_filter.MaxRooms"
                                 Label="Max antal rum"
                                 Variant="Variant.Outlined"
                                 Min="1" />
            </MudItem>

            <MudItem xs="6" Class="mb-4">
                <MudNumericField @bind-Value="_filter.MinPrice"
                                 Label="Min pris (SEK)"
                                 Variant="Variant.Outlined"
                                 Min="0" />
            </MudItem>
            <MudItem xs="6" Class="mb-4">
                <MudNumericField @bind-Value="_filter.MaxPrice"
                                 Label="Max pris (SEK)"
                                 Variant="Variant.Outlined"
                                 Min="0" />
            </MudItem>

            <MudItem xs="6" Class="mb-4">
                <MudNumericField @bind-Value="_filter.MinArea"
                                 Label="Min area (m²)"
                                 Variant="Variant.Outlined"
                                 Min="0" />
            </MudItem>
            <MudItem xs="6" Class="mb-4">
                <MudNumericField @bind-Value="_filter.MaxArea"
                                 Label="Max area (m²)"
                                 Variant="Variant.Outlined"
                                 Min="0" />
            </MudItem>
        </MudGrid>

        <div class="mt-4 text-center">
            <MudButton Variant="Variant.Filled"
                       Color="Color.Primary"
                       OnClick="ApplyFilter"
                       Class="px-8">
                Sök
            </MudButton>
        </div>
    </MudDrawer>

    <!-- HAMBURGER KNAPP -->
    <MudAppBar Elevation="0" Dense="true">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleSearchPanel" />
        <MudText Typo="Typo.h6" Class="ml-2">Bostadssök</MudText>
    </MudAppBar>

    <!-- RESULTAT -->
    <MudMainContent Class="p-4">
        <MudPaper Class="p-4" Elevation="3">
            <MudText Typo="Typo.h6" Class="mb-4">Sökresultat (@(_result?.Count ?? 0))</MudText>

            @if (_result == null)
            {
                <MudText>Ange sökkriterier och klicka på Sök</MudText>
            }
            else if (!_result.Any())
            {
                <MudAlert Severity="Severity.Info">Inga bostäder hittades med valda sökkriterier</MudAlert>
            }
            else
            {
                <MudTable Items="@_result" Hover="true" Breakpoint="Breakpoint.Sm" Class="mt-4">
                    <HeaderContent>
                        <MudTh>Bild</MudTh>
                        <MudTh>Adress</MudTh>
                        <MudTh>Typ</MudTh>
                        <MudTh>Rum</MudTh>
                        <MudTh>Pris</MudTh>
                        <MudTh>Area</MudTh>
                        <MudTh></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Bild">
                            @if (context.Residence.ImageUrls != null && context.Residence.ImageUrls.Any())
                            {
                                <MudAvatar Image="@context.Residence.ImageUrls.First()" Size="Size.Large" />
                            }
                            else
                            {
                                <MudAvatar Icon="@Icons.Material.Filled.Home" Size="Size.Large" />
                            }
                        </MudTd>
                        <MudTd DataLabel="Adress">@context.Residence.Address.Street</MudTd>
                        <MudTd DataLabel="Typ">@context.Residence.Type</MudTd>
                        <MudTd DataLabel="Rum">@context.Residence.Rooms</MudTd>
                        <MudTd DataLabel="Pris">@context.CurrentPrice.ToString("C0")</MudTd>
                        <MudTd DataLabel="Area">@context.Residence.Area m²</MudTd>
                        <MudTd DataLabel="">
                            <MudButton Variant="Variant.Text"
                                       Color="Color.Primary"
                                       Size="Size.Small"
                                       Href="@($"/advert-details/{context.Id}")">
                                Visa
                            </MudButton>
                        </MudTd>
                    </RowTemplate>
                </MudTable>
            }
        </MudPaper>
    </MudMainContent>

</MudDrawerContainer>


@code {
    private AdvertFilterDto _filter = new();
    private ICollection<AdvertDto>? _result;
    private bool _isLoading;
    private bool _searchPanelOpen = false;

    private void ToggleSearchPanel()
    {
        _searchPanelOpen = !_searchPanelOpen;
    }

    private void OnResidenceTypesChanged(IEnumerable<ResidenceType> values)
    {
        _filter.ResidenceTypes = values.ToList();
    }

    private async Task ApplyFilter()
    {
        _isLoading = true;
        try
        {
            
            _result = await AdvertService.GetFilteredAsync(_filter);
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }
}