@*Auth: Oscar*@
@page "/advert-search"
@inject NavigationManager navigationManager
@inject IAdvertService AdvertService
@using Newtonsoft.Json

<PageTitle>Sök Bostäder</PageTitle>

<MudMainContent Class="p-4" style="display: flex; align-items: flex-start; justify-content: center;">
        <MudGrid Spacing="6" Style="display: flex; justify-content:center">
            <MudItem xs="12" sm="12" md="4">
                <MudItem Style="display: flex; justify-content:center;">
                @* Searchform *@
                @if (_searchPanelOpen)
                {
                    <AdvertSearchForm Filter="_filter"
                                      OnApplyFilter="OnApplyFilter"
                                      OnResidenceTypesChanged="OnResidenceTypesChanged" />
                }


                @* Hamburgermenu *@
                <MudIconButton style="align-items: flex-start" Icon="@Icons.Material.Filled.Menu"
                               Color="Color.Primary"
                               Size="Size.Large"
                               OnClick="@ToggleSearchPanel" />
                </MudItem>
            </MudItem>
            <MudItem xs="12" sm="12" md="6">
                @* Adverts *@
                <div class="advert-list-container">
                    @if (_isLoading)
                    {
                        <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
                    }
                    else if (_result == null)
                    {
                        <MudText>Ange sökkriterier och klicka på Sök</MudText>
                    }
                    else if (!_result.Any())
                    {
                        <MudAlert Severity="Severity.Info">Inga bostäder hittades med valda sökkriterier</MudAlert>
                    }
                    else
                    {
                        @foreach (var advert in _result)
                        {
                            // change Robert: added button
                            //<div type="button" @onclick="() => GoToAdvert(advert.Id)"><AdvertCard Advert="advert" /></div>
                            <div type="button" @onclick="() => GoToAdvert(advert.Id)"><RealtorActiveAdvert Advert="advert" /></div>
                        }
                    }
                </div>
            </MudItem>
        </MudGrid>
</MudMainContent>



@code {
    private AdvertFilterDto _filter = new();
    private ICollection<AdvertDto>? _result;
    private bool _isLoading;
    private bool _searchPanelOpen = true;

    private void ToggleSearchPanel()
    {
        _searchPanelOpen = !_searchPanelOpen;
    }

    private void OnResidenceTypesChanged(IEnumerable<ResidenceType> values)
    {
        _filter.ResidenceTypes = values.ToList();
    }

    private async Task OnApplyFilter()
    {
        _isLoading = true;
        try
        {
            _result = await AdvertService.GetFilteredAsync(_filter);
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }

    // Added by Robert
    private void GoToAdvert(int advertId)
    {
        navigationManager.NavigateTo($"/advert/{advertId}");
    }
}


