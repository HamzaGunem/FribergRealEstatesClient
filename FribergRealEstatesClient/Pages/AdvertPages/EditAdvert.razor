@*Auth Hamza*@
@page "/edit-advert/{id:int}"
@inject IClient client
@inject ISnackbar Snackbar
@inject NavigationManager Navigation

<MudCard>
    <MudCardContent>
        @if (advert == null)
        {
            <MudProgressLinear Color="Color.Primary" Indeterminate="true" />
        }
        else
        {
            <EditForm Model="advert" OnValidSubmit="HandleSubmit">
                <MudForm @ref="form">
                    <MudGrid>
                        @*Price*@
                        <MudItem xs="12" md="6">
                            <MudNumericField @bind-Value="advert.CurrentPrice"
                                             Label="Current Price"
                                             Variant="Variant.Outlined"
                                             Required="true"
                                             Min="0">
                            </MudNumericField>
                        </MudItem>

                        @*Bool*@
                        <MudItem xs="12" md="6">
                            <MudSwitch @bind-Value="advert.Sold"
                                       Label="Sold"
                                       Color="Color.Info" />
                        </MudItem>

                        @*Datetime update*@
                        <MudItem xs="12">
                            <MudText Typo="Typo.body2">Last Updated: @advert.Updated.ToString("g")</MudText>
                        </MudItem>

                        @*Button*@
                        <MudItem xs="12" class="mt-4">
                            <MudButton Variant="Variant.Filled"
                                       Color="Color.Primary"
                                       ButtonType="ButtonType.Submit"
                                       Disabled="isProcessing">
                                @(isProcessing ? "Saving..." : "Save Changes")
                            </MudButton>

                            <MudButton Variant="Variant.Text"
                                       Color="Color.Default"
                                       Class="ml-2"
                                       OnClick="Cancel"
                                       Disabled="isProcessing">
                                Cancel
                            </MudButton>
                        </MudItem>

                    </MudGrid>
                </MudForm>
            </EditForm>
        }
    </MudCardContent>
</MudCard>


@code {
    [Parameter]
    public int id { get; set; }
    private AdvertDto advert;
    private MudForm form;
    private bool isProcessing = false;

    private async Task HandleSubmit()
    {
        await form.Validate();

        if (form.IsValid)
        {
            isProcessing = true;

            try
            {
                advert.Updated = DateTime.Now;

                //await client.UpdateAdvertAsync(id, advert);

                Snackbar.Add("Advert updated successfully!", Severity.Success);
                Navigation.NavigateTo($"/advert-details/{id}");
            }
            catch (Exception ex)
            {
                Snackbar.Add($"Error updating advert: {ex.Message}", Severity.Error);
                isProcessing = false;
            }
        }
    }
    protected override async Task OnInitializedAsync()
    {
        try
        {
            advert = await client.AdvertAsync(id);
            if (advert == null)
            {
                Snackbar.Add("Advert not found", Severity.Error);
                Navigation.NavigateTo("/");
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading advert: {ex.Message}", Severity.Error);
        }
    }
    private void Cancel()
    {
        Navigation.NavigateTo($"/my-active-advert");
    }
}

