@* Made by Robert *@
@page "/admin-changerealtor"
@inject IRealtorService realtorService
@inject IAgencyService agencyService

<div class="container">
    @if (adminRealtors != null)
    {
        <div class="container">
            <MudPaper Style="border: 1px solid black; background-color: ghostwhite" MinHeight="100px" Class="p-1">
                <MudText Typo="Typo.h4" Class="px-2 " Style="text-align:center; background-color:#273845; color: white;">Ändra mäklare</MudText>
                <MudItem xs="12" md="6" Class="pa-2">
                    <MudSelect @bind-Value:event="onchange" ValueChanged="@((string val) => OnRealtorChanged(val))" @bind-Value="_selectedRealtor" Label="Välj en mäklare" FullWidth="_fullWidth" FitContent="_fitContent" Variant="Variant.Outlined" Clearable>
                        @foreach (var item in adminRealtors)
                        {
                            <MudSelectItem Value="@item.Id.ToString()">@item.FirstName @item.LastName</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
            </MudPaper>
        </div>
    }

    @if (adminRealtors != null)
    {
        // change selected realtor
        <div class="container">
            <EditForm Model="realtorProfileDto" OnValidSubmit="UpdateRealtor">
                <DataAnnotationsValidator />
                <MudGrid>
                    <MudItem xs="12" sm="12" md="6" Class="m-4">
                        <MudPaper Class="p-3" Elevation="4">
                            <MudItem Class="mb-3">
                                @if (realtorProfileDto.PictureUrl == "")
                                {
                                    <MudImage src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ0UTn966lEU5sZay923MNmu8xF5AYuVUZulQ&s" Width="128" Height="128" Elevation="25" Class="rounded-lg" />
                                }
                                else
                                {
                                    <MudImage src="@realtorProfileDto.PictureUrl" Alt="Profilbild" Elevation="25" Class="rounded-lg" />
                                }
                            </MudItem>
                            <MudForm Spacing="3" Class="mb-2">
                                <MudTextField @bind-Value="realtorProfileDto.FirstName" For="@(() => realtorProfileDto.FirstName)" Label="Förnamn" />
                                <MudTextField @bind-Value="realtorProfileDto.LastName" For="@(() => realtorProfileDto.LastName)" Label="Efternamn" />
                                <MudTextField @bind-Value="realtorProfileDto.Email" For="@(() => realtorProfileDto.Email)" InputType="InputType.Email" Label="E-post" />
                                <MudTextField @bind-Value="realtorProfileDto.PhoneNumber" For="@(() => realtorProfileDto.PhoneNumber)" Label="Telefon" />
                                <MudTextField @bind-Value="realtorProfileDto.PictureUrl" For="@(() => realtorProfileDto.PictureUrl)" Label="Profilbild-länk" />

                                <MudSelect @bind-Value="_selectedAgency" Label="Välj en mäklarbyrå" Placeholder="" FullWidth="_fullWidth" FitContent="_fitContent" Variant="Variant.Outlined" Clearable>
                                    @if (agencies != null)
                                    {
                                        @foreach (var item in agencies)
                                        {
                                            <MudSelectItem Value="@item.Id.ToString()">@item.Name</MudSelectItem>
                                        }
                                    }
                                </MudSelect>
                            </MudForm>
                            <MudCardActions Class="d-flex justify-content-end mt-3">
                                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="">Uppdatera</MudButton>
                            </MudCardActions>
                        </MudPaper>
                    </MudItem>

                </MudGrid>
            </EditForm>
        </div>
    }
    else
    {
        <p>Loading...</p>
    }
</div>

@code {
    private bool _fullWidth;
    private bool _fitContent;
    private string _selectedAgency;
    private string _selectedRealtor;

    private List<AdminRealtorUserDto> adminRealtors = new();
    private List<AgencySummaryDto> agencies = new();
    private UpdateRealtorProfileDto realtorProfileDto = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadRealtors();
        agencies = (await agencyService.GetAllAgenciesAsync()).ToList();
        realtorProfileDto.PictureUrl = "";
    }

    private async Task LoadRealtors()
    {
        adminRealtors = (await realtorService.GetAllRealtors()).ToList();
    }

    private async Task OnRealtorChanged(string selectedRealtor)
    {
        var realtor = adminRealtors.FirstOrDefault(r => r.Id.ToString() == selectedRealtor);

        if (realtor != null)
        {
            realtorProfileDto.Id = realtor.Id;
            realtorProfileDto.FirstName = realtor.FirstName;
            realtorProfileDto.LastName = realtor.LastName;
            realtorProfileDto.Email = realtor.Email;
            realtorProfileDto.PhoneNumber = realtor.PhoneNumber;
            realtorProfileDto.PictureUrl = realtor.PictureUrl;

            if (realtor.AgencyId != null)
            {
                realtorProfileDto.AgencyId = realtor.AgencyId.Value;
            }

            _selectedRealtor = new string($"{realtor.FirstName} {realtor.LastName}");
        }

        var agency = agencies.FirstOrDefault(i => i.Id == realtor.AgencyId);

        if (agency != null)
        {
            _selectedAgency = agency.Name;
        }

        StateHasChanged();
    }

    private async Task UpdateRealtor(EditContext context)
    {
        Console.WriteLine(_selectedAgency);

        if (!string.IsNullOrEmpty(_selectedAgency))
        {
            realtorProfileDto.AgencyId = Convert.ToInt32(_selectedAgency);
        }

        await realtorService.UpdateRealtorProfileAsync(realtorProfileDto);
        await LoadRealtors();

        _selectedRealtor = new string($"{realtorProfileDto.FirstName} {realtorProfileDto.LastName}");

        StateHasChanged();
    }
}
