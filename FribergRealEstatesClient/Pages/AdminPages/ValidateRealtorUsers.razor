@* Made by Robert*@
@page "/validate-realtorusers"
@inject IRealtorService realtorService

<h3>ValidateRealtorUsers</h3>

@* <div class="container">
    <div class="realtor-container">
        @foreach (var realtor in realtors)
        {
            <MudPaper Elevation="2" Class="p-4 mb-3">
                <MudText Typo="Typo.h6">@($"{realtor.FirstName} {realtor.LastName}")</MudText>
                <MudDivider Class="my-2" />
                <MudText><b>Telefon:</b> @realtor.PhoneNumber</MudText>
                <MudText><b>Email:</b> @realtor.Email</MudText>
                <MudText><b>Email Bekräftad:</b> @(realtor.EmailConfirmed ? "Ja" : "Nej")</MudText>
                <MudText><b>Api User ID:</b> @realtor.ApiUserId</MudText>
            </MudPaper>
        }
    </div>
</div> *@
@if (_items != null)
{
    foreach (var item in _items)
    {
        <MudDropContainer T="DropItem" Items="_items" ItemsSelector="@((item,dropzone) => item.Identifier == dropzone)" ItemDropped="ItemUpdated" Class="d-flex flex-wrap flex-grow-1">
            <ChildContent>
            <MudDropZone T="DropItem" Identifier="Zone1" Class="rounded mud-background-gray pa-6 ma-8 flex-grow-1">
                <MudText Typo="Typo.h6" Class="mb-4">Bekräftade</MudText>
            </MudDropZone>
            <MudDropZone T="DropItem" Identifier="Zone2" Class="rounded mud-background-gray pa-6 ma-8 flex-grow-1">
                <MudText Typo="Typo.h6" Class="mb-4">Obekräftade</MudText>
            </MudDropZone>
        </ChildContent>
        <ItemRenderer>
            <MudPaper Elevation="25" Class="pa-4 my-4">
                <MudExpansionPanels>
                        <MudExpansionPanel Text="@($"{item.FirstName} {item.LastName}")" Style="text-align:center;" MaxHeight="300" Expanded="false">
                        <MudList T="string" Style="background-color: white;">
                            <MudDivider />
                            <MudListItem Icon="@Icons.Material.Filled.Create"
                            IconColor="Color.Success">
                                <MudText Color="Color.Default" Class="custom-link">
                                    Skapa
                                </MudText>
                            </MudListItem>
                            <MudDivider />
                            <MudListItem Icon="@Icons.Material.Filled.ChangeCircle" IconColor="Color.Primary">Ändra</MudListItem>
                            <MudDivider />
                            <MudListItem Icon="@Icons.Material.Filled.AssignmentInd" IconColor="Color.Warning">Koppla mäklare till byrå</MudListItem>
                            <MudDivider />
                            <MudListItem Icon="@Icons.Material.Filled.RemoveCircleOutline" IconColor="Color.Error">Ta bort</MudListItem>
                        </MudList>
                    </MudExpansionPanel>
                </MudExpansionPanels>
            </MudPaper>
        </ItemRenderer>
    </MudDropContainer>
    }
}
else
{
    <p>Loading...</p>
}

<style>
    .realtor-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    }
</style>

@code {
    private List<AdminRealtorUserDto> realtors = new();
    private List<DropItem> _items = new();

    protected override async Task OnInitializedAsync()
    {
        realtors = (await realtorService.GetAllRealtors()).ToList();

        if(realtors != null)
        {
            foreach (var item in realtors)
            {
                _items.Add(
                    new DropItem() { 
                        FirstName = item.FirstName,
                        LastName = item.LastName,
                        PhoneNumber = item.PhoneNumber,
                        Email = item.Email,
                        EmailConfirmed = item.EmailConfirmed,
                        ApiUserId = item.ApiUserId,
                        Identifier = item.EmailConfirmed ? "Zone1" : "Zone2"
                        }
                );
            }            
        }
    }

    private void ItemUpdated(MudItemDropInfo<DropItem> dropItem)
    {
        dropItem.Item.Identifier = dropItem.DropzoneIdentifier;
    }

    public class DropItem
    {
        public int Id { get; set; }
        public string FirstName { get; init; }
        public string LastName { get; init; }
        public string PhoneNumber { get; init; }
        public string Email { get; init; }
        public bool EmailConfirmed { get; set; }
        public string ApiUserId { get; set; }
        public string Identifier { get; set; }
    }
}
