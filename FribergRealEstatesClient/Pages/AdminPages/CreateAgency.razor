@* Auth: Oscar *@
@page "/create-agency"
@inject IAgencyService agencyService
@inject ICommunService communService
@inject NavigationManager navManager
@inject ISnackbar snackbar

<PageTitle>Skapa mäklarbyrå</PageTitle>
<div class="container">
    <MudMainContent class="p-4">
        <MudText Typo="Typo.h3" Class="px-5 m-0 mb-4" Style="text-align:center; background-color:#273845; color: white;">Skapa mäklarbyrå</MudText>

        <div style="display: flex; align-items: flex-start;">
            <CreateAgencyForm AgencyDto="agencyDto" AddressDto="addressDto" Communes="communs" OnCreate="Create" />
        </div>
    </MudMainContent>
</div>

<style>
    .mud-typography
    {
        border-radius: 5px;
    }
</style>

@code {
    private AgencyCreateDto agencyDto = new AgencyCreateDto();
    private AddressCreateDto addressDto = new AddressCreateDto();
    private List<CommunDto> communs = new List<CommunDto>();
  

    protected override async Task OnInitializedAsync()
    {

        communs = await communService.GetAllCommunsAsync();

    }
    private async Task Create()
    {
        
        agencyDto.Address = addressDto;
        try
        {
            await agencyService.CreateAgency(agencyDto);
            ShowSuccessAndNavigate();

        }
        catch (ApiException ex) when (ex.StatusCode == 201)
        {
            ShowSuccessAndNavigate();
        }
        catch (Exception ex)
        {
            snackbar.Add($"Ett fel inträffade: {ex.Message}", Severity.Error);

        }
    }

    private void ShowSuccessAndNavigate()
    {
        snackbar.Add("Mäklarbyrån skapad", Severity.Success);
        navManager.NavigateTo("/admindashboard");
    }
}

