
@*Made by Samuel*@
@*Updated and Styled by Jonathan *@
@page "/agency/search"
@inject IAgencyService agencyService
@inject NavigationManager navManager

<PageTitle>Sök Mäklarbyrå</PageTitle>

<div class="mt-4 container-fluid">
	<MudGrid>
		<!-- Generic SearchBox -->
		<MudItem xs="12" sm="4">
			<GenericSearchBox _searchTerm="@_searchTerm"
			_searchTitle="@_setSearchBoxTitle"
			OnSearch="SearchAgencies">
			</GenericSearchBox>
		</MudItem>

		<MudItem xs="12" sm="8">
			<div class="advert-list-container">
			@if (_searching)
			{
				<MudProgressCircular Indeterminate="true" Color="Color.Primary" />
			}
			else if (_getAgencies.Count == 0)
			{
				<MudText>Ange sökkriterier och klicka på Sök</MudText>
			}
			else if (_searchPerformed && !_getAgencies.Any())
			{
				<MudAlert Severity="Severity.Info">@_errorAgency @_searchTerm</MudAlert>
			}
			else
			{
				@foreach (var agency in _getAgencies)
				{
					<MudSimpleTable Class="agency-info-card p-2" Style="display: flex; overflow: auto; border: 2px solid darkgrey; border-radius: 10px;">
						<tbody>
							<tr>
								<td class="Agency-logo">
									<div @onclick="@(() => NavigateToAgency(agency.Id))"
									style="cursor: pointer; transition: transform 0.3s ease-in-out;"
									onmouseover="this.style.transform='scale(1.05)'"
									onmouseout="this.style.transform='scale(1)'">

										<GenericImageBox 
										ImageUrl="@agency.LogoUrl"
										AltText="bild på mäklarbyrå"
										SetStyling="object-fit: cover; width: 300px; height: 100%;">
										</GenericImageBox>
									</div>
								</td>

								<td class="Agency-Name-and-Description">
									<MudText Typo="Typo.h6">@agency.Name</MudText>
									<MudText Typo="Typo.caption"><strong>Address:</strong>
										@agency.Address.Street, 
										@agency.Address.PostalCode,
										@agency.Address.City
									</MudText>
									<GenericTextBox TextInput=@agency.Description></GenericTextBox>

									<div class="Agency-realtor-list" style="display: flex; overflow: auto;">
										@if (agency.Realtors.Count > 0)
										{
											@foreach (var realtor in agency.Realtors)
											{
												<div @onclick="@(() => NavigateToRealtor(realtor.Id))"
												style="cursor: pointer; transition: transform 0.3s ease-in-out;"
												onmouseover="this.style.transform='scale(1.05)'"
												onmouseout="this.style.transform='scale(1)'">
													<GenericImageBox 
													ImageUrl="@realtor.PictureUrl"
													AltText="bild på mäklare"
													SetStyling="width: 100px; height: 100%; object-fit: cover;">
													</GenericImageBox>
													<div class="mud-theme-primary" style="width: 100%; color: white; text-align: center; font-weight: bold; padding: 4px 0;">
														@realtor.FirstName
													</div>
												</div>
											}
										}
										else
										{
											<MudAlert Severity="Severity.Info">@_errorRealtors</MudAlert>
										}
									</div>
								</td>
							</tr>
						</tbody>
					</MudSimpleTable>
				}
			}
			</div>
		</MudItem>
	</MudGrid>
</div>

<style>
	.agency-info-card{
		border-radius: 8px !important;
		background-color: white;
		transition: all 0.3s ease-in-out;
		cursor: pointer
	}

	.agency-info-card:hover {
		transform: scale(1.02);
		box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3) !important;
	}
</style>

@code {
	private List<AgencyWithSimpleRealtorsDto>? _getAgencies = new();
	private List<SimpleRealtorDto> _getRealtors = new();

	private string _searchTerm = string.Empty;
	private bool _searching = false;
	private bool _searchPerformed = false;
	private string _setSearchBoxTitle = "Sök mäklarbyrå i stad/kommun";

	private string _errorAgency = "Hittade inga byråer i";
	private string _errorRealtors = "Inga registrerade mäklare";

	private async Task SearchAgencies(string term)
	{
		_searching = true;
		_searchPerformed = false;
		StateHasChanged();

		await Task.Delay(500);
		_searchTerm = term;
		if(!string.IsNullOrWhiteSpace(_searchTerm))
		{
			try
			{
				_getAgencies = await agencyService.GetAllAgenciesInCommun(_searchTerm);
			}
			finally
			{
				_searching = false;
				_searchPerformed = true;
				StateHasChanged();
			}
		}
	}

	private void NavigateToAgency(int id)
	{
		navManager.NavigateTo($"/agency/{id}");
	}

	private void NavigateToRealtor(int id)
	{
		navManager.NavigateTo($"/realtor/{id}");
	}
}
