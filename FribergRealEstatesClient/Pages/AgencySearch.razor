
@*Made by Samuel*@
@*Updated and Styled by Jonathan *@
@page "/agency/search"
@inject IAgencyService agencyService
@inject NavigationManager navManager

<Animation AnimationSelected="@zoomOutDownAnimationSelected" ExtraDelay="250" ExtraDuration="600">
    <PageTitle>Sök Mäklarbyrå</PageTitle>

    <div class="mt-4 container-fluid gap-2" style=" min-width:fit-content; display: flex;">
        <!-- Generic SearchBox -->
        <div>
            <GenericSearchBox _searchTerm="@_searchTerm"
            _searchTitle="@_setSearchBoxTitle"
            OnSearch="SearchAgencies">
            </GenericSearchBox>
        </div>

        <!-- Agency list container -->
        <div>
            @if (_searching)
            {
                <div>
                    <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
                </div>

            }
            else if (_getAgencies.Count == 0)
            {
                <div class="advert-list-container">
                    <MudText>Ange sökkriterier och klicka på Sök</MudText>
                </div>

            }
            else if (_searchPerformed && !_getAgencies.Any())
            {
                <div class="advert-list-container">
                    <MudAlert Severity="Severity.Info">@_errorAgency @_searchTerm</MudAlert>
                </div>

            }
            else
            {
                <div>
                    @foreach (var agency in _getAgencies)
                    {
                        <!-- Agency Info Card  -->
                        <div class="mud-theme-primary p-2 mb-3" style="display: flex; flex-direction: column; border-radius: 5px;">
                            @*<div style="border: 2px solid; padding: 2px;">*@

                            <div class="Logo-&-Textbox-container gap-2" style="display: flex;">
                                <!-- Agency Logo  -->
                                <div @onclick="@(() => NavigateToAgency(agency.Id))"
                                style="cursor: pointer; transition: transform 0.3s ease-in-out;"
                                onmouseover="this.style.transform='scale(1.05)'"
                                onmouseout="this.style.transform='scale(1)'">
                                    <GenericImageBox ImageUrl="@agency.LogoUrl"
                                    AltText="bild på mäklarbyrå"
                                    SetStyling="object-fit: cover; width: 300px; height: 100%;">
                                    </GenericImageBox>
                                </div>

                                <!-- Agency Information Texbox  -->
                                <div class="p-2" style="color:black; background-color: white; width:100%;">
                                    <MudText Typo="Typo.h5">@agency.Name</MudText>
                                    <MudText Typo="Typo.subtitle1">
                                        <strong>Address:</strong>
                                        @agency.Address.Street,
                                        @agency.Address.PostalCode,
                                        @agency.Address.City
                                    </MudText>
                                    <GenericTextBox TextInput=@agency.Description></GenericTextBox>
                                </div>
                            </div>

                            <!-- Agency Realtor Portraits  -->
                            <div class="mb-2 mt-2">
                                @if (agency.Realtors.Any())
                                {
                                    <MudGrid Spacing="1">
                                        @foreach (var realtor in agency.Realtors)
                                        {
                                            <MudItem>
                                                <div @onclick="@(() => NavigateToRealtor(realtor.Id))"
                                                style="cursor: pointer; transition: transform 0.3s ease-in-out;"
                                                onmouseover="this.style.transform='scale(1.05)'"
                                                onmouseout="this.style.transform='scale(1)'">
                                                    <GenericImageBox ImageUrl="@realtor.PictureUrl"
                                                    AltText="bild på mäklare"
                                                    SetStyling="width: 100px; height: 100%; object-fit: cover;">
                                                    </GenericImageBox>
                                                    <div style="width: 100px; color: white; background-color: #ae9d65; text-align: center; font-weight: bold; padding: 4px 0;">
                                                        @realtor.FirstName
                                                    </div>
                                                </div>
                                            </MudItem>
                                        }
                                    </MudGrid>
                                }
                                else
                                {
                                    <MudAlert Severity="Severity.Info">@_errorRealtors</MudAlert>
                                }
                            </div>
                        </div>
                    }
                </div>

            }
        </div>
    </div>
</Animation>


@code {
    private List<AgencyWithSimpleRealtorsDto>? _getAgencies = new();
    private List<string> _getRealtorPics = new();

    private string _searchTerm = string.Empty;
    private bool _searching = false;
    private bool _searchPerformed = false;
    private string _setSearchBoxTitle = "Sök mäklarbyrå i stad/kommun";

    private string _errorAgency = "Hittade inga byråer i";
    private string _errorRealtors = "Inga registrerade mäklare";


    //Animations
    private string zoomOutDownAnimationSelected = "";


    protected override void OnInitialized()
    {
        zoomOutDownAnimationSelected = AnimationsToSelect.zoomOutDown;
    }

    private async Task SearchAgencies(string term)
    {
        _searching = true;
        _searchPerformed = false;
        StateHasChanged();

        await Task.Delay(500);
        _searchTerm = term;
        if (!string.IsNullOrWhiteSpace(_searchTerm))
        {
            try
            {
                _getAgencies = await agencyService.GetAllAgenciesInCommun(_searchTerm);
            }
            finally
            {
                _searching = false;
                _searchPerformed = true;
                StateHasChanged();
            }
        }
    }

    private void NavigateToAgency(int id)
    {
        navManager.NavigateTo($"/agency/{id}");
    }

    private void NavigateToRealtor(int id)
    {
        navManager.NavigateTo($"/realtor/{id}");
    }

    private List<string> GetRealtorsImages(AgencyWithSimpleRealtorsDto agency)
    {
        List<string> newList = new();
        foreach (var realtor in agency.Realtors)
        {
            newList.Add(realtor.PictureUrl);
        }
        return newList;
    }
}
